# Generated by Django 4.1.7 on 2023-06-11 00:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
import user.models.company


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('middle_name', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=2)),
                ('user_type', models.CharField(choices=[('staff', 'Staff'), ('seeker', 'Seeker'), ('company-rep', 'Company Rep')], default='staff', max_length=15)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('add', 'Add'), ('change', 'Change'), ('delete', 'Delete'), ('view', 'View')], default='view', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(choices=[('', '---------select---------'), ('advertising-media-communications', 'Advertising, Media & Communications'), ('agriculture-fishing-forestry', 'Agriculture, Fishing & Forestry'), ('automotive-aviation', 'Automotive & Aviation'), ('banking-finance-insurance', 'Banking, Finance & Insurance'), ('construction', 'Construction'), ('education', 'Education'), ('energy-utilities', 'Energy & Utilities'), ('enforcement-security', 'Enforcement & Security'), ('entertainment-events-sport', 'Entertainment, Events & Sport'), ('government', 'Government'), ('healthcare', 'Healthcare'), ('hospitality-hotel', 'Hospitality & Hotel'), ('it-telecoms', 'IT & Telecoms'), ('law-compliance', 'Law & Compliance'), ('manufacturing-warehousing', 'Manufacturing & Warehousing'), ('mining-energy-metals', 'Mining, Energy & Metals'), ('ngo-npo-charity', 'NGO, NPO & Charity'), ('real-estate', 'Real Estate'), ('recruitment', 'Recruitment'), ('retail-fashion-fmcg', 'Retail, Fashion & FMCG'), ('shipping-logistics', 'Shipping & Logistics'), ('tourism-travel', 'Tourism & Travel')], default='', max_length=50)),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
            },
        ),
        migrations.CreateModel(
            name='CompanyRep',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='company_rep', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(choices=[('', '---------select----------'), ('c-level', 'C-level: CEO / COO / CIO / CFO / CTO / CPO'), ('senior-managements', 'Senior Management: Head of Department / Team Lead'), ('middle-managements', 'Middle Management: Supervisor / Unit Head'), ('junior-managements', 'Junior Level: Associate / Officer')], default='', max_length=30)),
            ],
            options={
                'verbose_name': 'Company Representative',
                'verbose_name_plural': 'Company Representatives',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='staff_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(max_length=150)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.staff')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_type', models.CharField(choices=[('super-admin', 'Super'), ('approval-admin', 'Approval'), ('category-admin', 'Category'), ('staff', 'Staff')], default='super-admin', max_length=30)),
                ('permissions', models.ManyToManyField(to='user.adminpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='adminpermission',
            name='type_permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.admintype'),
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('representative', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.companyrep')),
                ('company_name', models.CharField(max_length=150, unique=True)),
                ('industry', models.CharField(choices=[('', '---------select---------'), ('advertising-media-communications', 'Advertising, Media & Communications'), ('agriculture-fishing-forestry', 'Agriculture, Fishing & Forestry'), ('automotive-aviation', 'Automotive & Aviation'), ('banking-finance-insurance', 'Banking, Finance & Insurance'), ('construction', 'Construction'), ('education', 'Education'), ('energy-utilities', 'Energy & Utilities'), ('enforcement-security', 'Enforcement & Security'), ('entertainment-events-sport', 'Entertainment, Events & Sport'), ('government', 'Government'), ('healthcare', 'Healthcare'), ('hospitality-hotel', 'Hospitality & Hotel'), ('it-telecoms', 'IT & Telecoms'), ('law-compliance', 'Law & Compliance'), ('manufacturing-warehousing', 'Manufacturing & Warehousing'), ('mining-energy-metals', 'Mining, Energy & Metals'), ('ngo-npo-charity', 'NGO, NPO & Charity'), ('real-estate', 'Real Estate'), ('recruitment', 'Recruitment'), ('retail-fashion-fmcg', 'Retail, Fashion & FMCG'), ('shipping-logistics', 'Shipping & Logistics'), ('tourism-travel', 'Tourism & Travel')], default='', max_length=50)),
                ('number_of_employees', models.CharField(choices=[('', '---------select---------'), ('1', '1-4'), ('2', '5-10'), ('3', '11-25'), ('4', '26-50'), ('5', '51-100'), ('6', '101-200'), ('7', '201-500'), ('8', '501-1000'), ('9', '1001+')], default='', max_length=2)),
                ('type_of_employer', models.CharField(choices=[('', '---------select---------'), ('direct-employer', 'Direct Employer'), ('recruitment-agency', 'Recruitment Agency')], default='', max_length=30)),
                ('hear_about', models.CharField(choices=[('', '---------select---------'), ('online-search', 'Online Search'), ('online-adverts', 'Online Adverts'), ('online-articles', 'Online Articles'), ('social-media', 'Social Media (Linkedin,Twitter etc)'), ('email-marketing', 'Email Marketing'), ('billboards', 'Billboards'), ('radio', 'Radio'), ('tv', 'Tv'), ('newspaper', 'Newspaper'), ('magazines', 'Magazines'), ('direct-mail', 'Direct Mail'), ('referral', 'Referral'), ('event', 'Event'), ('other', 'OTHER')], default='', max_length=50, verbose_name='Where did you hear about us?')),
                ('website', models.CharField(max_length=100, null=True)),
                ('contact_person', models.CharField(max_length=100)),
                ('company_email', models.CharField(max_length=100)),
                ('company_phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('image', models.ImageField(upload_to=user.models.company.job_logo_directory_path)),
            ],
            options={
                'verbose_name': 'Company Information',
                'verbose_name_plural': 'Companies Information',
            },
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='job_seeker', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(choices=[('', '---------Select---------')], default='', max_length=30)),
                ('city', models.CharField(choices=[('', '---------select a country---------')], default='', max_length=30)),
                ('high_qualification', models.CharField(choices=[('', '---------select---------'), ('degree', 'Degree'), ('diploma', 'Diploma'), ('wassce-ssce', 'WASSCE / SSCE'), ('hnd', 'HND'), ('mba-msc', 'MBA / MSc'), ('mbbs', 'MBBS'), ('mphil-phd', 'MPhil / PhD'), ('nce', 'NCE'), ('ond', 'OND'), ('others', 'Others'), ('vocational', 'Vocational')], default='', max_length=15)),
                ('years_of_experience', models.IntegerField(default=1)),
                ('available', models.BooleanField(default=True)),
                ('job_sector', models.ManyToManyField(blank=True, related_name='sector_list', to='user.sector')),
            ],
            options={
                'verbose_name': 'Job seeker',
                'verbose_name_plural': 'Job seekers',
            },
        ),
        migrations.AddField(
            model_name='sector',
            name='seeker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seeker_sector', to='user.seeker'),
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='admin_staff', serialize=False, to='user.staff')),
                ('last_login', models.DateTimeField()),
                ('type_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_admin_type', to='user.admintype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
